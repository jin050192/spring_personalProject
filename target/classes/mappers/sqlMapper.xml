<?xml version="1.0" encoding="UTF-8"?>
		<!DOCTYPE mapper
    	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.project.persistence.MemberDAO">
	<!-- id, pwd 체크 로그인 처리 -->
	<select id="idPwdChk" resultType="java.util.Map">
		SELECT id as username, pwd as password, name, enabled, authority
		  FROM member_tbl 
		 WHERE id=#{userid}
	</select>
	
	<!-- 아이디 중복 체크 -->
	<select id="idCheck" resultType="int">
		SELECT count(*) FROM member_tbl WHERE id=#{id}
	</select>
	
	<!-- 회원가입 -->
	<insert id="insertMember" parameterType="java.util.Map">
		INSERT INTO member_tbl(id, pwd, jumin1, jumin2, name, address1, address2, address3, phone, email, reg_date, enabled)
		VALUES(#{id}, #{pwd}, #{jumin1}, #{jumin2}, #{name}, #{address1}, #{address2}, #{address3}, #{phone}, #{email}, #{reg_date}, 1)
	</insert>
	
	<!-- 패스워드 값 불러오기 -->
	<select id="loadPwd" resultType="String" parameterType="String">
		select pwd from member_tbl where id=#{id}
	</select>
	
	<!-- 아이디 삭제 -->
	<delete id="deleteMember" parameterType="String">
		delete member_tbl where id=#{id}
	</delete>
	
	<!-- 회원정보값 불러오기 -->
	<select id="getMemberInfo" resultType="com.spring.project.vo.MemberVO" parameterType="String">
		SELECT * FROM member_tbl WHERE id=#{id}
	</select>
	
	<!-- 정보 수정 -->
	<update id="modifyMember" parameterType="com.spring.project.vo.MemberVO">
		update member_tbl 
		   set pwd=#{pwd}, address1=#{address1}, address2=#{address2}, address3=#{address3}, phone=#{phone}, email=#{email} 
		 where id=#{id}
	</update>
	
	<!-- 아이디 찾기 -->
	<select id="getMemberID" resultType="String" parameterType="java.util.Map">
		SELECT id FROM member_tbl WHERE name=#{name} and jumin1=#{jumin1} and jumin2=#{jumin2}
	</select>
	
	<!-- 임시비밀번호로 변경 -->
	<update id="changePwd" parameterType="java.util.Map">
		update member_tbl 
		   set pwd=#{ranPwd}
		 where id=#{id} and name=#{name} and jumin1=#{jumin1} and jumin2=#{jumin2}
	</update>
	
	<!-- 멤버 갯수 구하기 -->
	<select id="getMemberCnt" resultType="int">
		SELECT count(*) as cnt FROM member_tbl
	</select>
	
	<!-- 멤버 리스트 불러오기 -->
	<select id="getMemberList" resultType="com.spring.project.vo.MemberVO" parameterType="java.util.Map">
		<![CDATA[
		SELECT *
		FROM(SELECT id, pwd, name, address2, email, reg_date, rowNum as rNum
			   FROM(SELECT * FROM member_tbl
				 	 ORDER BY reg_date desc))
		 WHERE rNum >= #{start} and rNum <= #{end}
		]]>
	</select>
</mapper>